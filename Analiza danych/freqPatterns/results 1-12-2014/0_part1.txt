> library(arules)
> 
> res <- dbSendQuery(con, 'SELECT edu_lvl.name AS "Education",
+ gend.name AS "Gender",
+ usr.year_categorized AS "Age", 
+ u_o_c.grade_normalized AS "Grade",
+ u_o_c.number_of_interactions_categorized AS "Interactions",
+ u_o_c.number_of_activity_days_categorized AS "Activity_Days",
+ u_o_c.number_of_played_videos_categorized AS "Played_Videos",
+ periods_tab.name AS "Course_Start",
+ courses_tab.name AS "Course_Name",
+ courses_tab.year AS "Course_Year",
+ regions_tab.name AS "Region"
+ FROM users AS usr
+ JOIN education_levels AS edu_lvl ON usr.education_level_id = edu_lvl.id
+ JOIN genders AS gend ON usr.gender_id = gend.id
+ JOIN users_on_courses AS u_o_c ON u_o_c.user_id = usr.id
+ JOIN courses AS courses_tab ON courses_tab.id = u_o_c.course_id
+ JOIN periods AS periods_tab ON periods_tab.id = courses_tab.period_id
+ JOIN regions AS regions_tab ON regions_tab.id = u_o_c.region_id
+ WHERE u_o_c.certified = 0
+ AND usr.year_categorized IS NOT NULL')
> 
> 
> dataList <- dbFetch(res)
> dbClearResult(res)
[1] TRUE
> 
> col_1 <- as.factor(dataList$Education)
> dataList$Education<- col_1
> 
> col_2 <- as.factor(dataList$Gender)
> dataList$Gender<- col_2
> 
> 
> col_3 <- as.factor(dataList$Age)
> dataList$Age<- col_3
> 
> 
> col_4 <- as.factor(dataList$Grade)
> dataList$Grade<- col_4
> 
> 
> col_5 <- as.factor(dataList$Interactions)
> dataList$Interactions<- col_5
> 
> 
> col_6 <- as.factor(dataList$Activity_Days)
> dataList$Activity_Days<- col_6
> 
> 
> col_7 <- as.factor(dataList$Played_Videos)
> dataList$Played_Videos<- col_7
> 
> 
> col_8 <- as.factor(dataList$Course_Start)
> dataList$Course_Start<- col_8
> 
> 
> col_9 <- as.factor(dataList$Course_Name)
> dataList$Course_Name<- col_9
> 
> 
> col_10 <- as.factor(dataList$Course_Year)
> dataList$Course_Year<- col_10
> 
> 
> col_11 <- as.factor(dataList$Region)
> dataList$Region<- col_11
> 
> f <- apriori(dataList , parameter = list(supp = 0.9, minlen = 3, target="frequent itemsets"))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen            target   ext
        0.8    0.1    1 none FALSE            TRUE     0.9      3     10 frequent itemsets FALSE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[76 item(s), 516336 transaction(s)] done [0.23s].
sorting and recoding items ... [4 item(s)] done [0.02s].
creating transaction tree ... done [0.07s].
checking subsets of size 1 2 3 4 done [0.00s].
writing ... [5 set(s)] done [0.00s].
creating S4 object  ... done [0.02s].
> 
> ##Show the Frequent itemsets and respectives supports
> inspect(f)
  items                 support
1 {Interactions=few,           
   Activity_Days=few,          
   Played_Videos=few} 0.9161379
2 {Grade=2,                    
   Interactions=few,           
   Activity_Days=few} 0.9172283
3 {Grade=2,                    
   Activity_Days=few,          
   Played_Videos=few} 0.9254323
4 {Grade=2,                    
   Interactions=few,           
   Played_Videos=few} 0.9518976
5 {Grade=2,                    
   Interactions=few,           
   Activity_Days=few,          
   Played_Videos=few} 0.9159830
> 
> 
> f <- apriori(dataList , parameter = list(supp = 0.8, minlen = 3, target="frequent itemsets"))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen            target   ext
        0.8    0.1    1 none FALSE            TRUE     0.8      3     10 frequent itemsets FALSE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[76 item(s), 516336 transaction(s)] done [0.24s].
sorting and recoding items ... [4 item(s)] done [0.02s].
creating transaction tree ... done [0.07s].
checking subsets of size 1 2 3 4 done [0.00s].
writing ... [5 set(s)] done [0.00s].
creating S4 object  ... done [0.02s].
> 
> ##Show the Frequent itemsets and respectives supports
> inspect(f)
  items                 support
1 {Interactions=few,           
   Activity_Days=few,          
   Played_Videos=few} 0.9161379
2 {Grade=2,                    
   Interactions=few,           
   Activity_Days=few} 0.9172283
3 {Grade=2,                    
   Activity_Days=few,          
   Played_Videos=few} 0.9254323
4 {Grade=2,                    
   Interactions=few,           
   Played_Videos=few} 0.9518976
5 {Grade=2,                    
   Interactions=few,           
   Activity_Days=few,          
   Played_Videos=few} 0.9159830
> 
> 
> f <- apriori(dataList , parameter = list(supp = 0.7, minlen = 3, target="frequent itemsets"))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen            target   ext
        0.8    0.1    1 none FALSE            TRUE     0.7      3     10 frequent itemsets FALSE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[76 item(s), 516336 transaction(s)] done [0.22s].
sorting and recoding items ... [5 item(s)] done [0.02s].
creating transaction tree ... done [0.11s].
checking subsets of size 1 2 3 4 done [0.00s].
writing ... [9 set(s)] done [0.00s].
creating S4 object  ... done [0.02s].
> 
> ##Show the Frequent itemsets and respectives supports
> inspect(f)
  items                 support
1 {Gender=Male,                
   Interactions=few,           
   Played_Videos=few} 0.7095051
2 {Gender=Male,                
   Grade=2,                    
   Interactions=few}  0.7112520
3 {Gender=Male,                
   Grade=2,                    
   Played_Videos=few} 0.7320369
4 {Interactions=few,           
   Activity_Days=few,          
   Played_Videos=few} 0.9161379
5 {Grade=2,                    
   Interactions=few,           
   Activity_Days=few} 0.9172283
6 {Grade=2,                    
   Activity_Days=few,          
   Played_Videos=few} 0.9254323
7 {Grade=2,                    
   Interactions=few,           
   Played_Videos=few} 0.9518976
8 {Gender=Male,                
   Grade=2,                    
   Interactions=few,           
   Played_Videos=few} 0.7092823
9 {Grade=2,                    
   Interactions=few,           
   Activity_Days=few,          
   Played_Videos=few} 0.9159830
> 
> 
> f <- apriori(dataList , parameter = list(supp = 0.6, minlen = 3, target="frequent itemsets"))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen            target   ext
        0.8    0.1    1 none FALSE            TRUE     0.6      3     10 frequent itemsets FALSE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[76 item(s), 516336 transaction(s)] done [0.22s].
sorting and recoding items ... [5 item(s)] done [0.02s].
creating transaction tree ... done [0.12s].
checking subsets of size 1 2 3 4 5 done [0.00s].
writing ... [16 set(s)] done [0.00s].
creating S4 object  ... done [0.03s].
> 
> ##Show the Frequent itemsets and respectives supports
> inspect(f)
   items                 support
1  {Gender=Male,                
    Interactions=few,           
    Activity_Days=few} 0.6835801
2  {Gender=Male,                
    Activity_Days=few,          
    Played_Videos=few} 0.6890087
3  {Gender=Male,                
    Grade=2,                    
    Activity_Days=few} 0.6905116
4  {Gender=Male,                
    Interactions=few,           
    Played_Videos=few} 0.7095051
5  {Gender=Male,                
    Grade=2,                    
    Interactions=few}  0.7112520
6  {Gender=Male,                
    Grade=2,                    
    Played_Videos=few} 0.7320369
7  {Interactions=few,           
    Activity_Days=few,          
    Played_Videos=few} 0.9161379
8  {Grade=2,                    
    Interactions=few,           
    Activity_Days=few} 0.9172283
9  {Grade=2,                    
    Activity_Days=few,          
    Played_Videos=few} 0.9254323
10 {Grade=2,                    
    Interactions=few,           
    Played_Videos=few} 0.9518976
11 {Gender=Male,                
    Interactions=few,           
    Activity_Days=few,          
    Played_Videos=few} 0.6825168
12 {Gender=Male,                
    Grade=2,                    
    Interactions=few,           
    Activity_Days=few} 0.6834774
13 {Gender=Male,                
    Grade=2,                    
    Activity_Days=few,          
    Played_Videos=few} 0.6888596
14 {Gender=Male,                
    Grade=2,                    
    Interactions=few,           
    Played_Videos=few} 0.7092823
15 {Grade=2,                    
    Interactions=few,           
    Activity_Days=few,          
    Played_Videos=few} 0.9159830
16 {Gender=Male,                
    Grade=2,                    
    Interactions=few,           
    Activity_Days=few,          
    Played_Videos=few} 0.6824142
> 
> 
> 
> 
> 
> 
> 
> 
